Weronika:
cd C:\Users\weron\Downloads\Machine_Learning_Cancer_Detection-main\Machine_Learning_Cancer_Detection\src

#Separate validation for threshold tuning
python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['corr']" `
  --model LR `
  --postprocess `
  --params "{'max_iter': 1000}" `
  --eval "['AUC ROC','accuracy','F1']" `


  python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['feature_selection','corr']" `
  --model DT `
  --params "{'max_depth': 6, 'min_samples_leaf': 5, 'criterion': 'gini', 'class_weight': 'balanced'}" `
  --eval "['AUC ROC','AUC PR','accuracy','Confusion Matrix','F1','recall','precision']" `
  --xai

  python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['corr']" `
  --model DT `
  --postprocess `
  --params "{'max_depth': 6, 'min_samples_leaf': 5, 'criterion': 'gini', 'class_weight': 'balanced'}" `
  --eval "['AUC ROC','AUC PR','accuracy','Confusion Matrix','F1','recall','precision']" `
  --xai

#Decision Tree with merge_train_test (more training data, no threshold tuning)
python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "merge_train_test" `
  --preprocess "['feature_selection','corr']" `
  --model DT `
  --params "{'max_depth': 6, 'min_samples_leaf': 5, 'criterion': 'gini', 'class_weight': 'balanced'}" `
  --eval "['AUC ROC','AUC PR','accuracy','Confusion Matrix','F1','recall','precision']"

PARAMS DO SVM:

1. SAFE_LINEAR (domyślny, baseline)
{
  "kernel": "linear",
  "C": 1.0,
  "class_weight": "balanced",
  "use_calibrated": True,
  "calibration_method": "sigmoid",
  "cv_calibration": 5
}

2. SAFE_RBF (opcjonalny, nieliniowy test) - Po FS cech ≤ ~500
  {
  "kernel": "rbf",
  "C": 2.0,
  "gamma": "scale",
  "class_weight": "balanced"
}

3.example

  python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['corr']" `
  --model SVM `
  --params "{'kernel': 'linear', 'C': 1.0, 'use_calibrated': True,'cv_calibration': 5}" `
  --eval "['AUC ROC','AUC PR','accuracy','Confusion Matrix','F1','recall','precision']" `
  --xai

#SVM Linear with merge_train_test (maximum training data)
python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "merge_train_test" `
  --preprocess "['corr']" `
  --model SVM `
  --params "{'kernel': 'linear', 'C': 1.0, 'use_calibrated': True,'cv_calibration': 5}" `
  --eval "['AUC ROC','AUC PR','accuracy','Confusion Matrix','F1','recall','precision']"

#Logistic Regression with threshold tuning (default: recall optimization)
python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['corr']" `
  --model LR `
  --postprocess `
  --params "{'max_iter': 1000, 'C': 1.0}" `
  --eval "['AUC ROC','accuracy','F1','recall','precision','Confusion Matrix']"

# ============================================================================
# THRESHOLD TUNING EXAMPLES (NEW POSTPROCESSING MODULE)
# ============================================================================


#Example 4: Youden's J optimization (maximize TPR - FPR)
python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['corr']" `
  --model LR `
  --postprocess `
  --params "{'max_iter': 1000, 'tuning_method': 'youden'}" `
  --eval "['AUC ROC','accuracy','recall','precision','Confusion Matrix']"

#Example 7: Threshold tuning without plots (faster execution)
python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['corr']" `
  --model LR `
  --postprocess `
  --params "{'max_iter': 1000, 'show_tuning_plots': False}" `
  --eval "['AUC ROC','accuracy','F1']"


  --preprocess "['feature_selection','corr']" `
  --model DT `
  --params "{'max_depth': 6, 'min_samples_leaf': 5, 'criterion': 'gini', 'class_weight': 'balanced'}" `
  --eval "['AUC ROC','AUC PR','accuracy','Confusion Matrix','F1','recall','precision']" `
  --xai

  _________________________________________________________________________________________________________

  python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['rfecv','corr','kbest']" `
  --model LR `
  --postprocess `
  --params "{'prefilter_k':1000,'max_iter': 1000, 'solver': 'lbfgs', 'penalty': 'l2', 'C': 1.0, 'class_weight': 'balanced'}" `
  --eval "['AUC ROC','auc pr','accuracy','Confusion Matrix','F1','r','p']"

    python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['rfecv','corr','kbest']" `
  --model SVM `
  --postprocess `
  --params "{'prefilter_k':500,'kernel': 'linear', 'C': 1.0, 'use_calibrated': True,'cv_calibration': 5}" `
  --eval "['accuracy','F1','recall','precision']" 
  --eval "['AUC ROC','AUC PR','accuracy','Confusion Matrix','F1','recall','precision']"

    python .\main.py `
  --data "data_sources\liquid_biopsy_data.csv" `
  --use_validation "separate" `
  --preprocess "['rfecv','corr','kbest']" `
  --model DT `
  --params "{'max_depth': 6, 'min_samples_leaf': 5, 'criterion': 'gini', 'class_weight': 'balanced'}" `
  --eval "['AUC ROC','AUC PR','accuracy','Confusion Matrix','F1','recall','precision']" `
  --xai

